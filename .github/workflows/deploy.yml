name: Deploy

on:
  push:
    branches:
      - master

env:
  SERVER_IP: ${{ secrets.SERVER_IP }}
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SSH_KEY: ${{ secrets.SSH_KEY }}
  PATH_TO_PROJECT: "C:/Users/rosel/myPROJECTS/myTGassistant"

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
      - name: Install OpenSSH Client
        shell: powershell
        run: |
          Add-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.24.1"

      - name: Build
        run: go build -o app.exe

      - name: Deploy to Server
        shell: powershell
        run: |
          $env:SSH_KEY | Out-File -FilePath deploy_key -Encoding ASCII

          $acl = Get-Acl deploy_key
          $rule = New-Object System.Security.AccessControl.FileSystemAccessRule(
              $env:USERNAME,
              "Read",
              "Allow"
          )
          $acl.SetAccessRule($rule)
          Set-Acl -Path deploy_key -AclObject $acl

          $remoteCommands = @"
            cd '$env:PATH_TO_PROJECT'
            git pull origin master
            .\deploy.ps1
          "@

          Write-Host "Trying SSH connection..."
          ssh -vvv -i deploy_key $env:SERVER_USER@$env:SERVER_IP $remoteCommands

          if ($LASTEXITCODE -ne 0) {
              Write-Host "##[error] Deployment failed!"
              exit 1
          }
          Write-Host "Deployment successful!"
