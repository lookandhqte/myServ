name: Deploy to Production

on:
  push:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
      - name: Install OpenSSH Client
        shell: powershell
        run: |
          Add-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.24.1"

      - name: Build
        run: go build -o app.exe

      - name: Deploy to Server
        shell: powershell
        run: |
          $keyPath = "$env:RUNNER_TEMP\ssh_key_$([Guid]::NewGuid().Guid)"
          "${{ secrets.SSH_KEY }}" | Out-File -FilePath $keyPath -Encoding utf8

          icacls $keyPath /inheritance:r
          icacls $keyPath /grant:r "$env:USERNAME:R"

          Write-Host "Проверка подключения к $env:SERVER_IP:22..."
          if (-not (Test-NetConnection $env:SERVER_IP -Port 22 -InformationLevel Quiet)) {
            Write-Host "Ошибка: Сервер недоступен!"
            exit 1
          }

          $sshCommand = @"
          cd C:\Users\rosel\OneDrive\Desktop\work\myTGassistant
          git pull origin master
          .\deploy.ps1
          "@

          try {
            # Выполняем команды на сервере
            ssh -i $keyPath -o ConnectTimeout=15 -o StrictHostKeyChecking=no $env:SERVER_USER@$env:SERVER_IP $sshCommand
            Write-Host "Деплой успешно завершен!"
          }
          catch {
            Write-Host "Ошибка при выполнении деплоя: $_"
            exit 1
          }
          finally {
            # Всегда удаляем ключ
            Remove-Item $keyPath -Force -ErrorAction SilentlyContinue
          }
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
